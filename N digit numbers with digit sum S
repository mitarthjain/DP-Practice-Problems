public class Solution {
    
    private long MOD = 1000000007L;
    
    public int solve(int A, int B) {
        long [][] dp = new long [A+1][B+1];
        for(int i=0; i<=A; i++){
            for(int j=0; j<=B; j++){
                dp[i][j] = -1;
            }
        }
        long count = 0;
        for (int i = 1; i <= 9; i++) {
            if (B-i >= 0) {
                count += solve(A-1, B-i, dp) % MOD; 
            }
        }
        return (int) (count % MOD);
    }
    
    private long solve(int A, int B, long[][] dp){
        
        if(A == 0){
            return B == 0 ? 1 : 0;
        }
        
        if(dp[A][B] != -1) return dp[A][B];
        
        long count = 0;
        
        for(int i=0; i < 10; i++){
            if(B - i >= 0){
                count += solve(A-1,B-i,dp);
            }
        }
        
        dp[A][B] = count % MOD;
        return dp[A][B];
        
    }
}
