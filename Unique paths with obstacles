class Solution {
    Integer[][] dp;
    public int uniquePathsWithObstacles(int[][] grid) {
        dp = new Integer[grid.length + 1][grid[0].length + 1];
        return dfs(grid, 0, 0);
    }
    
    private int dfs(int[][] grid, int i, int j) {
        if(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || grid[i][j] == 1) {
            return 0;
        }
        
        if(i == grid.length - 1 && j == grid[0].length - 1) {
            return 1;
        }
        if(dp[i+1][j] == null) dp[i+1][j] = dfs(grid, i + 1, j);
        if(dp[i][j+1] == null) dp[i][j+1] = dfs(grid, i, j + 1);
        int path = dp[i+1][j] + dp[i][j+1];
        return path;
    }
}
